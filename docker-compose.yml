services:
  api-gateway:
    container_name: api-gateway
    build:
      dockerfile: ./ApiGateway/Dockerfile
    networks:
      spring-boot:
    depends_on:
      - eureka-server
      - zipkin-server
    environment:
      - server.port=8888
    ports:
      - "8888:8888"

  eureka-server:
    container_name: eureka-server
    build:
      dockerfile: ./EurekaServer/Dockerfile
    networks:
      spring-boot:
    environment:
      - server.port=8761
    ports:
      - "8761:8761"

  kafka-producer:
    container_name: kafka-producer
    build:
      dockerfile: ./KafkaProducer/Dockerfile
    networks:
      spring-boot:
    depends_on:
      - eureka-server
      - api-gateway
      - zookeeper
      - kafka
      - postgres
      - zipkin-server
    environment:
      - server.port=1111
    ports:
      - "1111:1111"

  kafka-consumer:
    container_name: kafka-consumer
    build:
      dockerfile: ./KafkaConsumer/Dockerfile
    networks:
      spring-boot:
    depends_on:
      - eureka-server
      - api-gateway
      - zookeeper
      - kafka
      - zipkin-server
      - postgres
    environment:
      - server.port=2222
    ports:
      - "2222:2222"

  spring-security:
    container_name: spring-security
    build:
      dockerfile: ./SpringSecurity/Dockerfile
    networks:
      spring-boot:
    depends_on:
      - eureka-server
      - api-gateway
      - zipkin-server
      - postgres
    environment:
      - server.port=3333
    ports:
      - "3333:3333"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-zeroToHero
    ports:
      - "2181:2181"
    networks:
      - spring-boot

  kafka:
    image: wurstmeister/kafka
    container_name: kafka-zeroToHero
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="Topic1:1:3"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - spring-boot

  postgres:
    image: postgres:alpine
    container_name: postgres-zeroToHero
    environment:
      - POSTGRES_DB=demo
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    networks:
      - spring-boot

  zipkin-server:
    image: ghcr.io/openzipkin/zipkin:master
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring-boot
    depends_on:
      - eureka-server


networks:
  spring-boot:
    driver:
      bridge
